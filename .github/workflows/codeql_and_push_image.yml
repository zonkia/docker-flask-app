name: Deploy to ECR

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
    tags:
      - 'v*.*.*'


jobs:

  analyze:
    name: Analyze

    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2


    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  update-semver:
    if: github.event_name == 'push'
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: haya14busa/action-update-semver@v1
        id: version
#        with:
#          major_version_tag_only: true  # (optional, default is "false")

  build:
    if: github.event_name == 'push'
    needs: update-semver
    name: Build Image
    runs-on: ubuntu-latest
   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker-flask-app
        IMAGE_TAG: docker-flask-app-image
      run: |
        cd image
        tag_v=$(git describe --tags $(git rev-list --tags --max-count=1))
        tag=$(echo $tag_v | sed 's/v//')
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$tag .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$tag
